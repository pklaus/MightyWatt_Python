#!/usr/bin/env python
# -*- coding: utf-8 -*-

from mightywatt import MightyWatt
from bottle import Bottle, run, view, static_file, TEMPLATE_PATH
import os

# Find out where our resource files are located:
try:
    from pkg_resources import resource_filename, Requirement
    PATH = resource_filename("mightywatt", "webapp")
    #PATH = resource_filename(Requirement.parse("mightywatt"), "webapp")
except:
    PATH = './'

TEMPLATE_PATH.insert(0, os.path.join(PATH, 'views'))

MW = None

api = Bottle()

@api.get('/path')
def status():
    return {'path': PATH}

@api.get('/ms_since_last_update')
def status():
    return {'ms_since_last_update': MW.ms_since_last_update}

@api.get('/status')
def status():
    return MW.status

@api.get('/mode/cc/<current:float>')
def set_cc(current):
    MW.set_cc(current)
    return {'success': True}

@api.get('/mode/cv/<voltage:float>')
def set_cv(voltage):
    MW.set_cv(voltage)
    return {'success': True}

@api.get('/mode/cp/<power:float>')
def set_cp(power):
    MW.set_cp(power)
    return {'success': True}

@api.get('/mode/cr/<resistance:float>')
def set_cr(resistance):
    MW.set_cr(resistance)
    return {'success': True}

@api.get('/voltage-sensing/<mode>')
def set_voltage_sensing(mode):
    assert mode in ['local', 'remote']
    MW.set_remote(mode == 'remote')
    return {'success': True}

@api.get('/stop')
def stop():
    MW.stop()
    return {'success': True}

interface = Bottle()
interface.mount('/api', api)

@interface.get('/')
@view('control')
def index():
    return {}

@interface.get('/static/<filename:path>')
def serve_static(filename):
    return static_file(filename, root=os.path.join(PATH, 'static'))

def main():
    global MW
    import argparse
    parser = argparse.ArgumentParser(description='MightyWatt Web Server')
    parser.add_argument('serial_port', help='The serial port to connect to')
    parser.add_argument('--port', '-p', default=8001, help='Web server port')
    parser.add_argument('--ipv6', '-6', action='store_true', help='IPv6 mode')
    parser.add_argument('--debug', '-d', action='store_true', help='Debug mode')
    args = parser.parse_args()
    try:
        try:
            MW = MightyWatt(args.serial_port)
        except:
            parser.error("couldn't connect to the device.")
        MW.set_update_rate(100)
        if args.debug:
            run(interface, host='0.0.0.0', port=args.port, debug=True)
        else:
            if args.ipv6:
                # CherryPy is Python3 ready and has IPv6 support:
                run(interface, host='::', server='cherrypy', port=args.port)
            else:
                run(interface, host='0.0.0.0', server='cherrypy', port=args.port)
    except KeyboardInterrupt:
        print('Ctrl-C pressed. Exiting...')
    finally:
        try:
            MW.close()
        except:
            pass

if __name__ == "__main__":
    main()
